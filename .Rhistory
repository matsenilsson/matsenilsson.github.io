9090909,
90909190,
100,
9099999,
90909999,
9999,
9099999,
90909999,
9999,
9099999,
90909999,
9999)
length(unique(a))
sleep
d <- sleep
d
help(sleep)
summary(d)
plot(d$extra)
d1 <- d$extra[d$group == 1]
d2 <- d$extra[d$group == 2]
id <- 1:10
mean(d1)
mean(d2)
boxplot(d1, d2)
d1 < 0
sum(d1 < 0)
sum(d2 < 0)
plot(d1)
points(d2)
points(d2, pch = 21)
points(d2, pch = 22)
points(d2, pch = 1)
plot(d1)
points(d2, pch = 5)
mean(d1-d2)
d
data
help(data)
all()
all
data()
HairEyeColor
PlantGrowth
help(PlantGrowth)
women
help(women)
d <- women
plot(d$weight, d$height)
help(rnorm)
knitr::opts_chunk$set(echo = TRUE)
n <- 100
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 0.1)
summary(lm(y1 ~ x))
summary(lm(y2 ~ x))
n <- 1e4
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 0.1)
summary(lm(y1 ~ x))
summary(lm(y2 ~ x))
n <- 1e4
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 0.01)
summary(lm(y1 ~ x))
summary(lm(y2 ~ x))
rnorm(n, mean = 0.2, sd = 0.01)
mean(rnorm(n, mean = 0.2, sd = 0.01))
n <- 1e4
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 0.01)
summary(y1)
summary(lm(y1 ~ x))
summary(y2)
summary(lm(y2 ~ x))
n <- 1e4
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 0.01) * x
summary(y1)
summary(lm(y1 ~ x))
summary(y2)
summary(lm(y2 ~ x))
n <- 1e4
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 0.1) * x
summary(y1)
summary(lm(y1 ~ x))
summary(y2)
summary(lm(y2 ~ x))
n <- 1e4
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 2) * x
summary(y1)
summary(lm(y1 ~ x))
summary(y2)
summary(lm(y2 ~ x))
n <- 1e4
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 20) * x
summary(y1)
summary(lm(y1 ~ x))
summary(y2)
summary(lm(y2 ~ x))
n <- 1e5
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 20) * x
summary(y1)
summary(lm(y1 ~ x))
summary(y2)
summary(lm(y2 ~ x))
n <- 1e6
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 20) * x
#summary(y1)
#summary(lm(y1 ~ x))
summary(y2)
summary(lm(y2 ~ x))
n <- 1e7
x  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- rnorm(n = n, mean = 0, sd = 1) + 0.2 * x
y2 <- rnorm(n = n, mean = 0, sd = 1) + rnorm(n, mean = 0.2, sd = 20) * x
#summary(y1)
#summary(lm(y1 ~ x))
summary(y2)
summary(lm(y2 ~ x))
n <- 1e3
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.2 * x
y2 <- yo + rnorm(n, mean = 0.2, sd = 0) * x
n <- 1e3
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.2 * x
y2 <- y0 + rnorm(n, mean = 0.2, sd = 0) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
n <- 1e3
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.2 * x
y2 <- y0 + rnorm(n, mean = 0.2, sd = 0.1) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
n <- 1e3
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.2 * x
y2 <- y0 + rnorm(n, mean = 0.2, sd = 0.1) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
n <- 1e3
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.2 * x
y2 <- y0 + rnorm(n, mean = 0.2, sd = 2) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
n <- 1e3
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.2 * x
y2 <- y0 + rnorm(n, mean = 0.2, sd = 1) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
n <- 1e3
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.2) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
n <- 1e5
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.2) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
n <- 1e4
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 1) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
n <- 1e4
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.5) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
n <- 1e4
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.5) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
plot(x, y1)
points(x, y2, pch = 21, bg = 'green')
n <- 1e2
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.5) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
plot(x, y1)
points(x, y2, pch = 21, bg = 'green')
n <- 1e3
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 0.1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.5) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
plot(x, y1)
points(x, y2, pch = 21, bg = 'green')
n <- 1e3
x  <- rnorm(n = n, mean = 100, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 0.1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.5) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
plot(x, y1)
points(x, y2, pch = 21, bg = 'green')
n <- 1e3
x  <- rnorm(n = n, mean = 0, sd = 1)
y0  <- rnorm(n = n, mean = 0, sd = 0.1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.5) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
plot(x, y1)
points(x, y2, pch = 21, bg = 'green')
n <- 1e3
x  <- rnorm(n = n, mean = 10, sd = 1)
y0  <- rnorm(n = n, mean = 10, sd = 0.1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.5) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
plot(x, y1)
points(x, y2, pch = 21, bg = 'green')
n <- 1e3
x  <- rnorm(n = n, mean = 10, sd = 1)
y0  <- rnorm(n = n, mean = 10, sd = 0.1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.1) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
plot(x, y1)
points(x, y2, pch = 21, bg = 'green')
n <- 1e3
x  <- rnorm(n = n, mean = 10, sd = 1)
y0  <- rnorm(n = n, mean = 10, sd = 1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.1) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
plot(x, y1)
points(x, y2, pch = 21, bg = 'green')
n <- 1e3
x  <- rnorm(n = n, mean = 10, sd = 1)
y0  <- rnorm(n = n, mean = 10, sd = 1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.2) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
plot(x, y1)
points(x, y2, pch = 21, bg = 'green')
n <- 1e3
x  <- rnorm(n = n, mean = 10, sd = 1)
y0  <- rnorm(n = n, mean = 10, sd = 1)
y1 <- y0 + 0.5 * x
y2 <- y0 + rnorm(n, mean = 0.5, sd = 0.2) * x
summary(y1)
lm(y1 ~ x)
summary(y2)
lm(y2 ~ x)
boxplot(y1, y2)
plot(x, y2, pch = 21, bg = 'green')
points(x, y1)
data()
VADeaths
USAccDeaths
fdeaths
n <- sample(1e3:1e6, 20)
n <- sample(seq(1e3, 1e6, by 1e3), 20)
n <- sample(seq(1e3, 1e6, by = 1e3), 20)
n <- sample(seq(1e3, 1e6, by = 1e4), 20)
n <- sample(seq(1e3, 1e6, by = 1e5), 20)
n <- sample(seq(1e3, 1e6, by = 1e4), 20)
min(n)
max(n)
getwd()
setwd("C:/Users/MATNI/Dropbox/mn2018/undervisning/method1/methods1_ht18/stamnosslin.github.io")
getwd()
rmarkdown:: clean_site()
rmarkdown::render_sidet()
rmarkdown::render_site()
getwd()
rmarkdown::clean_site()
rmarkdown::render_site()
rmarkdown::clean_site()
rmarkdown::render_site()
rmarkdown::clean_site()
rmarkdown::render_site()
warnings()
# Script1. Randomized experiment (under construction)
#
# The simulated scenario is a simple randomized experiment on the effect of extra
# music lessons on math performance.
#
# Simulated variables:
#  1. Independent variable: At the start of grade 6, all children at a specific
#     school are randomly assigned to receive either extra music lessons (treatment)
#     or no extra music lessons (control).
#  2. Background (or pre-treatment) variable: Socioeconomic status, defined based
#     on residential area (either high-income or low-income area).
#  3. Outcome variable: Score on math test taken at the end of the semester.
#
# Mats Nilsson (mats.nilsson@psychology.su.se), revised: 2018-11-03
# To be started at REX001 ...
# Clear things and set random seed ---------------------------------------------
rm(list = ls())  # Clears the global environment
graphics.off()  # Clear all plots
cat("\014")  # Clears the console
set.seed(123)  # Seet sed of random number generator
# ------------------------------------------------------------------------------
# Simulate data ----------------------------------------------------------------
n <- 600  # Sample size
id <- 1:n # Unique id number for each participant
# Random assignment, Bernoulli trial method
rand_assign <- sample(c(0, 1), replace = TRUE, size = n)
# Music lessons (for the moment assuming 100 % compliance)
music_lessons <- rand_assign
# Performance math test (for the moment assuming it is independent of treatment)
math <- rnorm(n, m = 50, sd = 10)  # Math test, mean = 50; sd = 10
# Make data set
d <- data.frame(id, rand_assign, music_lessons, math)
# ------------------------------------------------------------------------------
# To be continued at REX002 ...
getwd()
rmarkdown::clean_site()
rmarkdown::render_site()
# Script1. Randomized experiment (under construction)
#
# The simulated scenario is a simple randomized experiment on the effect of extra
# music lessons on math performance.
#
# Simulated variables:
#  1. Independent variable: At the start of grade 6, all children at a specific
#     school are randomly assigned to receive either extra music lessons (treatment)
#     or no extra music lessons (control).
#  2. Background (or pre-treatment) variable: Socioeconomic status, defined based
#     on residential area (either high-income or low-income area).
#  3. Outcome variable: Score on math test taken at the end of the semester.
#
# Mats Nilsson (mats.nilsson@psychology.su.se), revised: 2018-11-11
# To be started at REX001 ...
## Clear things and set random seed --------------------------------------------
rm(list = ls())
graphics.off()
cat("\014")
set.seed(123)
## -----------------------------------------------------------------------------
## Simulate data ---------------------------------------------------------------
n <- 600 # Sample size
id <- 1:n # Unique id number for each participant
# Random assignment
rand_assign <- sample(c(0, 1), replace = TRUE, size = n) # Bernoulli trial method
# Music lessons (for the moment assuming 100 % compliance)
music_lessons <- rand_assign
# Socoeconomic status
ses <- sample(c(0, 1), prob = c(0.7, 0.3), size = n, replace = TRUE)
# Performance math test (dependent on SES but independent of treatment)
math <- rnorm(n, m = 50, sd = 10) + 10 * ses # Math test, mean = 50; sd = 10
# Make data set
d <- data.frame(id, rand_assign, ses, music_lessons, math)
# Remove varibles, as they now are in data frame d
rm(id, rand_assign, ses, music_lessons, math)
## -----------------------------------------------------------------------------
## Some checks -----------------------------------------------------------------
# Balance check
balance_table <- table(rand_assign = d$rand_assign, ses = d$ses)
balance_table_prop <- prop.table(balance_table, margin = 1)
round(balance_table_prop, 2)
# Effect of ses on math
boxplot(d$math ~ d$ses)
t.test(d$math ~ d$ses)
# Effect of music lessons on math
boxplot(d$math ~ d$music_lessons)
t.test(d$math ~ d$music_lessons)
## -----------------------------------------------------------------------------
balance_table <- table(rand_assign = d$rand_assign, ses = d$ses)
balance_table
balance_table_prop <- prop.table(balance_table, margin = 1)
balance_table_prop
round(balance_table_prop, 2)
boxplot(d$math ~ d$ses)
t.test(d$math ~ d$ses)
boxplot(d$math ~ d$music_lessons)
t.test(d$math ~ d$music_lessons)
Independent variable: At the start of grade 6, all children at a specific
#     school are randomly assigned to receive either extra music lessons (treatment)
#     or no extra music lessons (control).
#  2. Background (or pre-treatment) variable: Socioeconomic status, defined based
#     on residential area (either high-income or low-income area).
#  3. Outcome variable: Score on math test taken at the end of the semester.
#
# Mats Nilsson (mats.nilsson@psychology.su.se), revised: 2018-11-11
# To be started at REX001 ...
## Clear things and set random seed --------------------------------------------
rm(list = ls())
graphics.off()
cat("\014")
set.seed(123)
## -----------------------------------------------------------------------------
## Simulate data ---------------------------------------------------------------
n <- 60000 # Sample size
id <- 1:n # Unique id number for each participant
# Random assignment
rand_assign <- sample(c(0, 1), replace = TRUE, size = n) # Bernoulli trial method
# Music lessons (for the moment assuming 100 % compliance)
music_lessons <- rand_assign
# Socoeconomic status
ses <- sample(c(0, 1), prob = c(0.7, 0.3), size = n, replace = TRUE)
# Performance math test (dependent on SES but independent of treatment)
math <- rnorm(n, m = 50, sd = 10) + 10 * ses # Math test, mean = 50; sd = 10
# Make data set
d <- data.frame(id, rand_assign, ses, music_lessons, math)
# Remove varibles, as they now are in data frame d
rm(id, rand_assign, ses, music_lessons, math)
## -----------------------------------------------------------------------------
## Some checks -----------------------------------------------------------------
# Balance check
balance_table <- table(rand_assign = d$rand_assign, ses = d$ses)
balance_table_prop <- prop.table(balance_table, margin = 1)
round(balance_table_prop, 2)
# Effect of ses on math
boxplot(d$math ~ d$ses)
t.test(d$math ~ d$ses)
# Effect of music lessons on math
boxplot(d$math ~ d$music_lessons)
t.test(d$math ~ d$music_lessons)
## ----------------------------------------------------------------------------
