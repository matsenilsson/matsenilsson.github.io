xlab = 'Model', ylab = 'Causal effect estimate [cm/ksteps]', axes = FALSE)
# Add ci (precision) for independent variable
arrows(x0 = 1, x1 = 1, y0 = ci_crude[1], y1 = ci_crude[2],
code = 3, length = 0.1, angle = 90)
arrows(x0 = 2, x1 = 2, y0 = ci_adj[1], y1 = ci_adj[2],
code = 3, length = 0.1, angle = 90)
# Add point estimate for independent variable
points(1, b_crude, pch = 21, bg = 'grey') # Crude, at x = 1
points(2, b_adj, pch = 21, bg = 'grey')  # Adjusted, at x = 2
# Add line at no effect
lines(xlim, c(0, 0))
# Add line at true total causal effect
lines(xlim, c(ate, ate), lty = 3, col = 'grey')
# Add line at true direct causal effect
lines(xlim, c(kw, kw), lty = 2, col = 'grey')
# Add x-axis
axis(1, at = c(0.5, 1, 2, 2.5), labels = c('', 'Crude', 'Adjusted', ''),
tck = 0.01, pos = ylim[1])
# Add y-axis
axis(2, las = 2, tck = 0.01, pos = xlim[1])
## -----------------------------------------------------------------------------
# Script1. Here we will extend the simple scenario from last time (bivariate)
# by adding a third variable, and then
# analyze and visualize it using linear regression.
#
# Independent variable -- Average number of steps (x1000) taken per day during
#                         study period (measure of physical activity)
# Dependent variable   -- Waist circumference (cm) at end of study
# Covariate            -- Average number of calories (x1000) per day
#                         (estimated from diaries during study period)
# Mats Nilsson (mats.nilsson@psychology.su.se), revised: 2019-10-28
## Clear things to start clean! ------------------------------------------------
rm(list = ls())  # Clear the global environment
graphics.off()  # Clear all plots
cat("\014")  # Clear the console
## -----------------------------------------------------------------------------
## This is (almost*) the same script as last time (script1_r.R). Today we will add a variable
# and simulate collider bias. *I added a line for teh direct effect in the last plot
## Simulation with a mediator = diet  ------------------------------------------
set.seed(999)  # Any number may be used
# Number of observations
n <- 5e3
# Causal effects
kw <- -0.4 # Causal effect of independent on dependent variable
kd <- -0.2 # Causal effect of independent variable on mediator
dw <-  1.0 # Causal effect of mediator on dependent variable
# total causal effect of ksteps on waistcm
ate <- kw + kd * dw  # ate for "average total effect"
# Independet variable (exposure): Average 1000-steps per day during study
ksteps <- rnorm(n, mean = 6, sd = 2.5)
# Mediator, calories x 1000 per day from diet (2 is 2000 calories)
diet <- rnorm(n, mean = 2, sd = 0.5) + kd * ksteps
# Dependent variable (outcome): Waist circumference at end of study
waistcm <- rnorm(n, 100, 5) + kw * ksteps + dw * diet
# Put in data frame
d <- data.frame(diet, ksteps, waistcm)
# Remove stuff (not necessary, but doesn't hurt)
rm(diet, ksteps, waistcm)
## -----------------------------------------------------------------------------
## Analyze simulated data ------------------------------------------------------
# Linear regression model
crude <- lm(d$waistcm ~ d$ksteps)  # Crude model
adjusted <- lm(d$waistcm ~ d$ksteps + d$diet)  # Adjusted model
summary(crude)
summary(adjusted)
# Simple scattergram with regression line
plot(d$ksteps, d$waistcm)
abline(crude)
# Scatterplot matrix. NB!: Takes time for large n!
#pairs(~ d$ksteps + d$diet+ d$waistcm,
#      lower.panel = panel.smooth)
## -----------------------------------------------------------------------------
## Simple result plot ----------------------------------------------------------
# Extract regression results from the two models
b_crude <- crude$coefficients[2]
ci_crude <- confint(crude)[2, ]
b_adj <- adjusted$coefficients[2]
ci_adj <- confint(adjusted)[2, ]
# Decide range of axis (from minimum to maximum value)
xlim = c(0.5, 2.5)
ylim = c(-1, 1)
# Empty plot (NA = missing data!)
plot(NA,
xlim = xlim, ylim = ylim,
xlab = 'Model', ylab = 'Causal effect estimate [cm/ksteps]', axes = FALSE)
# Add ci (precision) for independent variable
arrows(x0 = 1, x1 = 1, y0 = ci_crude[1], y1 = ci_crude[2],
code = 3, length = 0.1, angle = 90)
arrows(x0 = 2, x1 = 2, y0 = ci_adj[1], y1 = ci_adj[2],
code = 3, length = 0.1, angle = 90)
# Add point estimate for independent variable
points(1, b_crude, pch = 21, bg = 'grey') # Crude, at x = 1
points(2, b_adj, pch = 21, bg = 'grey')  # Adjusted, at x = 2
# Add line at no effect
lines(xlim, c(0, 0))
# Add line at true effect
lines(xlim, c(kw, kw), lty = 3, col = 'grey')
# Add x-axis
axis(1, at = c(0.5, 1, 2, 2.5), labels = c('', 'Crude', 'Adjusted', ''),
tck = 0.01, pos = ylim[1])
# Add y-axis
axis(2, las = 2, tck = 0.01, pos = xlim[1])
## -----------------------------------------------------------------------------
## Simple result plot ----------------------------------------------------------
# Extract regression results from the two models
b_crude <- crude$coefficients[2]
ci_crude <- confint(crude)[2, ]
b_adj <- adjusted$coefficients[2]
ci_adj <- confint(adjusted)[2, ]
# Decide range of axis (from minimum to maximum value)
xlim = c(0.5, 2.5)
ylim = c(-1, 1)
# Empty plot (NA = missing data!)
plot(NA,
xlim = xlim, ylim = ylim,
xlab = 'Model', ylab = 'Causal effect estimate [cm/ksteps]', axes = FALSE)
# Add ci (precision) for independent variable
arrows(x0 = 1, x1 = 1, y0 = ci_crude[1], y1 = ci_crude[2],
code = 3, length = 0.1, angle = 90)
arrows(x0 = 2, x1 = 2, y0 = ci_adj[1], y1 = ci_adj[2],
code = 3, length = 0.1, angle = 90)
# Add point estimate for independent variable
points(1, b_crude, pch = 21, bg = 'grey') # Crude, at x = 1
points(2, b_adj, pch = 21, bg = 'grey')  # Adjusted, at x = 2
# Add line at no effect
lines(xlim, c(0, 0))
# Add line at true total causal effect
lines(xlim, c(ate, ate), lty = 3, col = 'grey')
# Add line at true direct causal effect
lines(xlim, c(kw, kw), lty = 2, col = 'grey')
# Add x-axis
axis(1, at = c(0.5, 1, 2, 2.5), labels = c('', 'Crude', 'Adjusted', ''),
tck = 0.01, pos = ylim[1])
# Add y-axis
axis(2, las = 2, tck = 0.01, pos = xlim[1])
## -----------------------------------------------------------------------------
# Script1. Here we will extend the simple scenario from last time (bivariate)
# by adding a third variable, and then
# analyze and visualize it using linear regression.
#
# Independent variable -- Average number of steps (x1000) taken per day during
#                         study period (measure of physical activity)
# Dependent variable   -- Waist circumference (cm) at end of study
# Covariate            -- Average number of calories (x1000) per day
#                         (estimated from diaries during study period)
# Mats Nilsson (mats.nilsson@psychology.su.se), revised: 2019-10-28
## Clear things to start clean! ------------------------------------------------
rm(list = ls())  # Clear the global environment
graphics.off()  # Clear all plots
cat("\014")  # Clear the console
## -----------------------------------------------------------------------------
## This is (almost*) the same script as last time (script1_r.R). Today we will add a variable
# and simulate collider bias. *I added a line for teh direct effect in the last plot
## Simulation with a mediator = diet  ------------------------------------------
set.seed(999)  # Any number may be used
# Number of observations
n <- 5e3
# Causal effects
kw <- 0#-0.4 # Causal effect of independent on dependent variable
kd <- -0.2 # Causal effect of independent variable on mediator
dw <-  1.0 # Causal effect of mediator on dependent variable
# total causal effect of ksteps on waistcm
ate <- kw + kd * dw  # ate for "average total effect"
# Independet variable (exposure): Average 1000-steps per day during study
ksteps <- rnorm(n, mean = 6, sd = 2.5)
# Mediator, calories x 1000 per day from diet (2 is 2000 calories)
diet <- rnorm(n, mean = 2, sd = 0.5) + kd * ksteps
# Dependent variable (outcome): Waist circumference at end of study
waistcm <- rnorm(n, 100, 5) + kw * ksteps + dw * diet
# Put in data frame
d <- data.frame(diet, ksteps, waistcm)
# Remove stuff (not necessary, but doesn't hurt)
rm(diet, ksteps, waistcm)
## -----------------------------------------------------------------------------
## Analyze simulated data ------------------------------------------------------
# Linear regression model
crude <- lm(d$waistcm ~ d$ksteps)  # Crude model
adjusted <- lm(d$waistcm ~ d$ksteps + d$diet)  # Adjusted model
summary(crude)
summary(adjusted)
# Simple scattergram with regression line
plot(d$ksteps, d$waistcm)
abline(crude)
# Scatterplot matrix. NB!: Takes time for large n!
#pairs(~ d$ksteps + d$diet+ d$waistcm,
#      lower.panel = panel.smooth)
## -----------------------------------------------------------------------------
## Simple result plot ----------------------------------------------------------
# Extract regression results from the two models
b_crude <- crude$coefficients[2]
ci_crude <- confint(crude)[2, ]
b_adj <- adjusted$coefficients[2]
ci_adj <- confint(adjusted)[2, ]
# Decide range of axis (from minimum to maximum value)
xlim = c(0.5, 2.5)
ylim = c(-1, 1)
# Empty plot (NA = missing data!)
plot(NA,
xlim = xlim, ylim = ylim,
xlab = 'Model', ylab = 'Causal effect estimate [cm/ksteps]', axes = FALSE)
# Add ci (precision) for independent variable
arrows(x0 = 1, x1 = 1, y0 = ci_crude[1], y1 = ci_crude[2],
code = 3, length = 0.1, angle = 90)
arrows(x0 = 2, x1 = 2, y0 = ci_adj[1], y1 = ci_adj[2],
code = 3, length = 0.1, angle = 90)
# Add point estimate for independent variable
points(1, b_crude, pch = 21, bg = 'grey') # Crude, at x = 1
points(2, b_adj, pch = 21, bg = 'grey')  # Adjusted, at x = 2
# Add line at no effect
lines(xlim, c(0, 0))
# Add line at true effect
lines(xlim, c(kw, kw), lty = 3, col = 'grey')
# Add x-axis
axis(1, at = c(0.5, 1, 2, 2.5), labels = c('', 'Crude', 'Adjusted', ''),
tck = 0.01, pos = ylim[1])
# Add y-axis
axis(2, las = 2, tck = 0.01, pos = xlim[1])
## -----------------------------------------------------------------------------
## Simple result plot ----------------------------------------------------------
# Extract regression results from the two models
b_crude <- crude$coefficients[2]
ci_crude <- confint(crude)[2, ]
b_adj <- adjusted$coefficients[2]
ci_adj <- confint(adjusted)[2, ]
# Decide range of axis (from minimum to maximum value)
xlim = c(0.5, 2.5)
ylim = c(-1, 1)
# Empty plot (NA = missing data!)
plot(NA,
xlim = xlim, ylim = ylim,
xlab = 'Model', ylab = 'Causal effect estimate [cm/ksteps]', axes = FALSE)
# Add ci (precision) for independent variable
arrows(x0 = 1, x1 = 1, y0 = ci_crude[1], y1 = ci_crude[2],
code = 3, length = 0.1, angle = 90)
arrows(x0 = 2, x1 = 2, y0 = ci_adj[1], y1 = ci_adj[2],
code = 3, length = 0.1, angle = 90)
# Add point estimate for independent variable
points(1, b_crude, pch = 21, bg = 'grey') # Crude, at x = 1
points(2, b_adj, pch = 21, bg = 'grey')  # Adjusted, at x = 2
# Add line at no effect
lines(xlim, c(0, 0))
# Add line at true total causal effect
lines(xlim, c(ate, ate), lty = 3, col = 'grey')
# Add line at true direct causal effect
lines(xlim, c(kw, kw), lty = 2, col = 'grey')
# Add x-axis
axis(1, at = c(0.5, 1, 2, 2.5), labels = c('', 'Crude', 'Adjusted', ''),
tck = 0.01, pos = ylim[1])
# Add y-axis
axis(2, las = 2, tck = 0.01, pos = xlim[1])
## -----------------------------------------------------------------------------
# Script1. Here we will extend the simple scenario from last time (bivariate)
# by adding a third variable, and then
# analyze and visualize it using linear regression.
#
# Independent variable -- Average number of steps (x1000) taken per day during
#                         study period (measure of physical activity)
# Dependent variable   -- Waist circumference (cm) at end of study
# Covariate            -- Average number of calories (x1000) per day
#                         (estimated from diaries during study period)
# Mats Nilsson (mats.nilsson@psychology.su.se), revised: 2019-10-28
## Clear things to start clean! ------------------------------------------------
rm(list = ls())  # Clear the global environment
graphics.off()  # Clear all plots
cat("\014")  # Clear the console
## -----------------------------------------------------------------------------
## This is (almost*) the same script as last time (script1_r.R). Today we will add a variable
# and simulate collider bias. *I added a line for teh direct effect in the last plot
## Simulation with a mediator = diet  ------------------------------------------
set.seed(999)  # Any number may be used
# Number of observations
n <- 5e3
# Causal effects
kw <- -0.4 # Causal effect of independent on dependent variable
kd <- -0.2 # Causal effect of independent variable on mediator
dw <-  1.0 # Causal effect of mediator on dependent variable
# total causal effect of ksteps on waistcm
ate <- kw + kd * dw  # ate for "average total effect"
# Independet variable (exposure): Average 1000-steps per day during study
ksteps <- rnorm(n, mean = 6, sd = 2.5)
# Mediator, calories x 1000 per day from diet (2 is 2000 calories)
diet <- rnorm(n, mean = 2, sd = 0.5) + kd * ksteps
# Dependent variable (outcome): Waist circumference at end of study
waistcm <- rnorm(n, 100, 5) + kw * ksteps + dw * diet
# Put in data frame
d <- data.frame(diet, ksteps, waistcm)
# Remove stuff (not necessary, but doesn't hurt)
rm(diet, ksteps, waistcm)
## -----------------------------------------------------------------------------
## Analyze simulated data ------------------------------------------------------
# Linear regression model
crude <- lm(d$waistcm ~ d$ksteps)  # Crude model
adjusted <- lm(d$waistcm ~ d$ksteps + d$diet)  # Adjusted model
summary(crude)
summary(adjusted)
# Simple scattergram with regression line
plot(d$ksteps, d$waistcm)
abline(crude)
# Scatterplot matrix. NB!: Takes time for large n!
#pairs(~ d$ksteps + d$diet+ d$waistcm,
#      lower.panel = panel.smooth)
## -----------------------------------------------------------------------------
## Simple result plot ----------------------------------------------------------
# Extract regression results from the two models
b_crude <- crude$coefficients[2]
ci_crude <- confint(crude)[2, ]
b_adj <- adjusted$coefficients[2]
ci_adj <- confint(adjusted)[2, ]
# Decide range of axis (from minimum to maximum value)
xlim = c(0.5, 2.5)
ylim = c(-1, 1)
# Empty plot (NA = missing data!)
plot(NA,
xlim = xlim, ylim = ylim,
xlab = 'Model', ylab = 'Causal effect estimate [cm/ksteps]', axes = FALSE)
# Add ci (precision) for independent variable
arrows(x0 = 1, x1 = 1, y0 = ci_crude[1], y1 = ci_crude[2],
code = 3, length = 0.1, angle = 90)
arrows(x0 = 2, x1 = 2, y0 = ci_adj[1], y1 = ci_adj[2],
code = 3, length = 0.1, angle = 90)
# Add point estimate for independent variable
points(1, b_crude, pch = 21, bg = 'grey') # Crude, at x = 1
points(2, b_adj, pch = 21, bg = 'grey')  # Adjusted, at x = 2
# Add line at no effect
lines(xlim, c(0, 0))
# Add line at true effect
lines(xlim, c(kw, kw), lty = 3, col = 'grey')
# Add x-axis
axis(1, at = c(0.5, 1, 2, 2.5), labels = c('', 'Crude', 'Adjusted', ''),
tck = 0.01, pos = ylim[1])
# Add y-axis
axis(2, las = 2, tck = 0.01, pos = xlim[1])
## -----------------------------------------------------------------------------
## Simple result plot ----------------------------------------------------------
# Extract regression results from the two models
b_crude <- crude$coefficients[2]
ci_crude <- confint(crude)[2, ]
b_adj <- adjusted$coefficients[2]
ci_adj <- confint(adjusted)[2, ]
# Decide range of axis (from minimum to maximum value)
xlim = c(0.5, 2.5)
ylim = c(-1, 1)
# Empty plot (NA = missing data!)
plot(NA,
xlim = xlim, ylim = ylim,
xlab = 'Model', ylab = 'Causal effect estimate [cm/ksteps]', axes = FALSE)
# Add ci (precision) for independent variable
arrows(x0 = 1, x1 = 1, y0 = ci_crude[1], y1 = ci_crude[2],
code = 3, length = 0.1, angle = 90)
arrows(x0 = 2, x1 = 2, y0 = ci_adj[1], y1 = ci_adj[2],
code = 3, length = 0.1, angle = 90)
# Add point estimate for independent variable
points(1, b_crude, pch = 21, bg = 'grey') # Crude, at x = 1
points(2, b_adj, pch = 21, bg = 'grey')  # Adjusted, at x = 2
# Add line at no effect
lines(xlim, c(0, 0))
# Add line at true total causal effect
lines(xlim, c(ate, ate), lty = 3, col = 'grey')
# Add line at true direct causal effect
lines(xlim, c(kw, kw), lty = 2, col = 'grey')
# Add x-axis
axis(1, at = c(0.5, 1, 2, 2.5), labels = c('', 'Crude', 'Adjusted', ''),
tck = 0.01, pos = ylim[1])
# Add y-axis
axis(2, las = 2, tck = 0.01, pos = xlim[1])
## -----------------------------------------------------------------------------
# Script1b. Simulating data consistent with a Directed Acyclical Graph(DAG):
# Violent video games (VVG) as exposure and Adult aggression (AGG) as outcome.
# Covariates: Physical activity (PA), Parental support (Support),
# School problems (SProb), BMI (BMI), Genetic factor (Genetic).
#
# DAG:
# VVG -> AGG
# VVG -> PA -> AGG
# PA -> BMI
# VVG <- Support -> SProb -> AGG
# SProb <- Genetic -> AGG
## Clear things and set random seed --------------------------------------------
rm(list = ls())
graphics.off()
cat("\014")
set.seed(123)
## -----------------------------------------------------------------------------
## Simulate data ---------------------------------------------------------------
n = 1e3  # Sample size
# Define total causal effect of vvg on agg
dir_ec <- 0.3  # Direct causal effect vvg on agg
bvvg_pa <- -1  # Causal effect vvg on pa
bpa_agg <- -0.3 # Causal effect pa pn agg
ind_ec <- bvvg_pa * bpa_agg  # Indirect causal effect
total_ce <- dir_ec + ind_ec # This is what we want to estimate!
# Exogenous variables
support <- rnorm(n)  # Standardized scores, drawn from the Standard normal distr.
genetic <- rnorm(n)
# Endogenous Variable
vvg <-   rnorm(n) - 0.5 * support
pa <-    rnorm(n) + bvvg_pa * vvg
bmi <-   rnorm(n) + -1.2 * pa
sprob <- rnorm(n) + -0.8 * support  + 0.5 * genetic
agg <-   rnorm(n) + 0.3 * vvg      + bpa_agg * pa   + 1.5 * sprob + 1 * genetic
## -----------------------------------------------------------------------------
## Estimate causal effect ------------------------------------------------------
total_ce  # To be estimated = True effect
adj0 <- lm(agg ~ vvg)  # Bias: Omitted variable bias (= Confounding bias)
adj1 <- lm(agg ~ vvg + support) # No bias
adj2 <- lm(agg ~ vvg + sprob) # Bias: Collider bias
adj3 <- lm(agg ~ vvg + support + sprob) # No bias
adj4 <- lm(agg ~ vvg + pa + support) # Bias: Over-adjustment bias
adj5 <- lm(agg ~ vvg + bmi + support) # Bias: Over-adjustment bias
## -----------------------------------------------------------------------------
## Illustrate causal estimate --------------------------------------------------
# This function add points with confidence interval to an existing plot
add_estimate <- function(model, xpos) {
# Estimnate fo causal effect
estimate <- model$coefficients['vvg']
# It's 95 % CI
ci <- confint(model)['vvg',]
# Draw CI in plot
arrows(x0 = xpos, x1 = xpos, y0 = ci[1], y1 = ci[2],
length = 0.05, angle = 90, code = 3)
# Draw point
points(xpos, estimate, pch = 21, bg = 'grey')
}
# Make plot
plot(0, xlim = c(0, 5), ylim = c(-0.1, 1.5), pch = '', xlab = 'Model',
ylab = 'Causal estimate')
# Add line at true causal effect
lines(c(-1, 6), c(total_ce, total_ce), lty = 2)
# Add line at zero causal effect
lines(c(-1, 6), c(0, 0), lty = 1, col = 'grey')
# Use function to add data points and error bars (95 % CIs)
add_estimate(adj0, 0)
add_estimate(adj1, 1)
add_estimate(adj2, 2)
add_estimate(adj3, 3)
add_estimate(adj4, 4)
add_estimate(adj5, 5)
## -----------------------------------------------------------------------------
# Script1b. Simulating data consistent with a Directed Acyclical Graph(DAG):
# Violent video games (VVG) as exposure and Adult aggression (AGG) as outcome.
# Covariates: Physical activity (PA), Parental support (Support),
# School problems (SProb), BMI (BMI), Genetic factor (Genetic).
#
# DAG:
# VVG -> AGG
# VVG -> PA -> AGG
# PA -> BMI
# VVG <- Support -> SProb -> AGG
# SProb <- Genetic -> AGG
## Clear things and set random seed --------------------------------------------
rm(list = ls())
graphics.off()
cat("\014")
set.seed(123)
## -----------------------------------------------------------------------------
## Simulate data ---------------------------------------------------------------
n = 1e3  # Sample size
# Define total causal effect of vvg on agg
dir_ec <- 0.3  # Direct causal effect vvg on agg
bvvg_pa <- -1  # Causal effect vvg on pa
bpa_agg <- -0.3 # Causal effect pa pn agg
ind_ec <- bvvg_pa * bpa_agg  # Indirect causal effect
total_ce <- dir_ec + ind_ec # This is what we want to estimate!
# Exogenous variables
support <- rnorm(n)  # Standardized scores, drawn from the Standard normal distr.
genetic <- rnorm(n)
# Endogenous Variable
vvg <-   rnorm(n) - 0.5 * support
pa <-    rnorm(n) + bvvg_pa * vvg
bmi <-   rnorm(n) + -1.2 * pa
sprob <- rnorm(n) + -0.8 * support  + 0.5 * genetic
agg <-   rnorm(n) + 0.3 * vvg      + bpa_agg * pa   + 1.5 * sprob + 1 * genetic
## -----------------------------------------------------------------------------
## Estimate causal effect ------------------------------------------------------
total_ce  # To be estimated = True effect
adj0 <- lm(agg ~ vvg)  # Bias: Omitted variable bias (= Confounding bias)
adj1 <- lm(agg ~ vvg + support) # No bias
adj2 <- lm(agg ~ vvg + sprob) # Bias: Collider bias
adj3 <- lm(agg ~ vvg + support + sprob) # No bias
adj4 <- lm(agg ~ vvg + pa + support) # Bias: Over-adjustment bias
adj5 <- lm(agg ~ vvg + bmi + support) # Bias: Over-adjustment bias
## -----------------------------------------------------------------------------
## Illustrate causal estimate --------------------------------------------------
# This function add a point with confidence interval to an existing plot
# Arguments: Model -- Regression model including the predictor vvg
#            xpos -- Position alöong x-axis of the point and CI
add_estimate <- function(model, xpos) {
# Model estimate of causal effect
estimate <- model$coefficients['vvg']
# It's 95 % CI
ci <- confint(model)['vvg',]
# Draw CI in plot
arrows(x0 = xpos, x1 = xpos, y0 = ci[1], y1 = ci[2],
length = 0.05, angle = 90, code = 3)
# Draw point
points(xpos, estimate, pch = 21, bg = 'grey')
}
# Make plot
plot(0, xlim = c(0, 5), ylim = c(-0.1, 1.5), pch = '', xlab = 'Model',
ylab = 'Causal estimate')
# Add line at true causal effect
lines(c(-1, 6), c(total_ce, total_ce), lty = 2)
# Add line at zero causal effect
lines(c(-1, 6), c(0, 0), lty = 1, col = 'grey')
# Use function to add data points and error bars (95 % CIs)
add_estimate(adj0, 0)
add_estimate(adj1, 1)
add_estimate(adj2, 2)
add_estimate(adj3, 3)
add_estimate(adj4, 4)
add_estimate(adj5, 5)
## -----------------------------------------------------------------------------
