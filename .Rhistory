n = 1e3
x <- rnorm(n)
y_fixed <- rnorm(n) + 0.01 * x
y_random <- rnorm(n) + rnorm(n, mean = 0.01, sd = 2) * x
summary(lm(y_fixed ~ x))
plot(x, y_fixed, ylim = c(-7, 7))
summary(lm(y_random ~ x))
points(x, y_random, pch = 21, bg = 'red')
n = 1e3
x <- rnorm(n)
y_fixed <- rnorm(n) + 0.01 * x
y_random <- rnorm(n) + rnorm(n, mean = 0.01, sd = 1) * x
summary(lm(y_fixed ~ x))
plot(x, y_fixed, ylim = c(-7, 7))
summary(lm(y_random ~ x))
points(x, y_random, pch = 21, bg = 'red')
# Clear things and set random seed ---------------------------------------------
rm(list = ls())
graphics.off()
cat("\014")
set.seed(123)
# ------------------------------------------------------------------------------
# To be started at REX005 ...
# Simulate: All variables continous, normally distirbuted and on a standardized scale,
# all relationships linear.
n = 1e5
vvg <- rnorm(n)
pa <- rnorm(n) + 0.5 * vvg
agg <- rnorm(n) + 0.5 * vvg + 0.5 * pa
bmi <- rnorm(n) + 0.5 * pa
lm(agg ~ vvg)
# To be continued and finalized at REX006 ...
# Simulate full DAG ------------------------------------------------------------
support <- rnorm(n)
genetic <- rnorm(n)
sprob   <- rnorm(n) + 0.5 * support + 0.5 * genetic
vvg     <- rnorm(n) + 0.5 * support
pa      <- rnorm(n) + 0.5 * vvg
bmi     <- rnorm(n) + 0.5 * pa
agg     <- rnorm(n) + 0.5 * vvg + 0.5 * pa + 0.5 * sprob + 0.5 * genetic
# ------------------------------------------------------------------------------
# Do some regression modelling -------------------------------------------------
model1 <- lm(agg ~ vvg)  # confounding bias
model2 <- lm(agg ~ vvg + pa + support)  # over-adjustment bias
model3 <- lm(agg ~ vvg + bmi + support) # over-adjustment bias, but less so
model4 <- lm(agg ~ vvg + sprob)  # collider bias
model5 <- lm(agg ~ vvg + support) # unbiased
model6 <- lm(agg ~ vvg + support + sprob) # unbiased
# ------------------------------------------------------------------------------
# Extracting model estimates ---------------------------------------------------
crude <- model1$coefficients[2]
with_sprob <- model4$coefficients[2]
with_support <- model5$coefficients[2]
my_estimates <- c(crude, with_sprob, with_support)  # Combine in a vector
names(my_estimates) <- c('Crude', '+Sprob', '+Support')
# ------------------------------------------------------------------------------
# Plot of model estimates ------------------------------------------------------
plot(c(1, 2, 3), my_estimates, ylim = c(0.5, 1), xaxt = 'n', xlab = 'Model',
ylab = 'Causal effect estimate')
lines(c(1, 3), c(0.75, 0.75), lty = 2)
axis(1, at = 1:3, labels <- names(my_estimates))
# ---------------------------------------------------
# To be started at REX001 ...
# Clear things and set random seed ---------------------------------------------
rm(list = ls())
graphics.off()
cat("\014")
set.seed(123)
# ------------------------------------------------------------------------------
# Set these parameters ---------------------------------------------------------
n <- 6000 # Sample size
phi_ses <- 0.3  # Proportion high SES
pnt_hi <- 0.0  # Proportion nevertakers among high-SES children
pnt_lo <- 0.0  # Proportion nevertakers among low-SES children
causal_effect <- 0  # Mean causal effect
sd_causal_effect <- 1  # Standard deviation of causal effect
# ------------------------------------------------------------------------------
# Simulate data ----------------------------------------------------------------
id <- 1:n # Unique id number for each participant
# Define socio-economic status (SES)
ses <- sample(c(0, 1), prob = c(1 - phi_ses, phi_ses), size = n, replace = TRUE)
# Define complier (how does this work?). 1 = nevertaker, 0 = complier. We are
# assuming no always-takers and no defiers
nt_hi <-      ses  * sample(c(0, 1), size = n, replace = TRUE,
prob = c(1 - pnt_hi, pnt_hi))
nt_lo <- (1 - ses) * sample(c(0, 1), size = n, replace = TRUE,
prob = c(1 - pnt_lo, pnt_lo))
u_nevertaker <- nt_hi + nt_lo
# Potential outcomes
u_Y0 <- rnorm(n, m = 50, sd = 10) + 10 * ses
u_Y1 <- u_Y0 + rnorm(n, m = causal_effect, sd = sd_causal_effect)
#u_Y1[u_nevertaker == 1] <- u_Y0[u_nevertaker == 1]  # Never-takers have the same outcome under both
# Single unit causal effect (delta)
u_delta <- u_Y1 - u_Y0
# Random assignment
rand_assign <- sample(c(0, 1), replace = TRUE, size = n) # Bernoulli trial method
# Recieved treatment
music_lessons <- rand_assign * (1 - u_nevertaker)  # No music lessons for nevertakers
# Observed scores
math <- u_Y0  # Math scores untreated
math[music_lessons == 1] <- u_Y1[music_lessons == 1]  # Math score treated
# Make data set
d <- data.frame(id, u_Y0, u_Y1, u_delta, u_nevertaker, ses, rand_assign, music_lessons, math)
# ------------------------------------------------------------------------------
# Script1. Randomized experiment (under construction)
#
# The simulated scenario is a simple randomized experiment on the effect of extra
# music lessons on math performance.
#
# Simulated variables:
#  1. Independent variable: At the start of grade 6, all children at a specific
#     school are randomly assigned to receive either extra music lessons (treatment)
#     or no extra music lessons (control).
#  2. Background (or pre-treatment) variable: Socioeconomic status, defined based
#     on residential area (either high-income or low-income area).
#  3. Outcome variable: Score on math test taken at the end of the semester.
#
# Mats Nilsson (mats.nilsson@psychology.su.se), revised: 2017-11-14
# To be started at REX001 ...
# Clear things and set random seed ---------------------------------------------
rm(list = ls())
graphics.off()
cat("\014")
set.seed(123)
# ------------------------------------------------------------------------------
# Set these parameters ---------------------------------------------------------
n <- 6000 # Sample size
phi_ses <- 0.3  # Proportion high SES
pnt_hi <- 0.0  # Proportion nevertakers among high-SES children
pnt_lo <- 0.0  # Proportion nevertakers among low-SES children
causal_effect <- 0  # Mean causal effect
sd_causal_effect <- 1  # Standard deviation of causal effect
# ------------------------------------------------------------------------------
# Simulate data ----------------------------------------------------------------
id <- 1:n # Unique id number for each participant
# Define socio-economic status (SES)
ses <- sample(c(0, 1), prob = c(1 - phi_ses, phi_ses), size = n, replace = TRUE)
# Define complier (how does this work?). 1 = nevertaker, 0 = complier. We are
# assuming no always-takers and no defiers
nt_hi <-      ses  * sample(c(0, 1), size = n, replace = TRUE,
prob = c(1 - pnt_hi, pnt_hi))
nt_lo <- (1 - ses) * sample(c(0, 1), size = n, replace = TRUE,
prob = c(1 - pnt_lo, pnt_lo))
u_nevertaker <- nt_hi + nt_lo
# Potential outcomes
u_Y0 <- rnorm(n, m = 50, sd = 10) + 10 * ses
u_Y1 <- u_Y0 + rnorm(n, m = causal_effect, sd = sd_causal_effect)
#u_Y1[u_nevertaker == 1] <- u_Y0[u_nevertaker == 1]  # Never-takers have the same outcome under both
# Single unit causal effect (delta)
u_delta <- u_Y1 - u_Y0
# Random assignment
rand_assign <- sample(c(0, 1), replace = TRUE, size = n) # Bernoulli trial method
# Recieved treatment
music_lessons <- rand_assign * (1 - u_nevertaker)  # No music lessons for nevertakers
# Observed scores
math <- u_Y0  # Math scores untreated
math[music_lessons == 1] <- u_Y1[music_lessons == 1]  # Math score treated
# Make data set
d <- data.frame(id, u_Y0, u_Y1, u_delta, u_nevertaker, ses, rand_assign, music_lessons, math)
# ------------------------------------------------------------------------------
# To be contined at REX003 ...
# Intention to treat analysis (ITT) --------------------------------------------
itt_balance <- table('ses' = d$ses, 'assignment' = d$rand_assign)
prop.table(itt_balance, 2)
assign_control <- mean(d$math[d$rand_assign == 0])
assign_treat <- mean(d$math[d$rand_assign == 1])
itt_estimate <- assign_treat - assign_control
itt_lm <- lm(d$math ~ d$rand_assign)
summary(itt_lm)
# ------------------------------------------------------------------------------
# As-treated analysis (AT) -----------------------------------------------------
at_balance <- table('ses' = d$ses, 'received' = d$music_lessons)
prop.table(at_balance, 2)
received_control <- mean(d$math[d$music_lessons == 0])
received_treat <- mean(d$math[d$music_lessons == 1])
at_estimate <- received_treat - received_control
at_lm <- lm(d$math ~ d$music_lessons)
summary(at_lm)
# ------------------------------------------------------------------------------
# Per protocol (pp) analysis ---------------------------------------------------
dd <- d[d$rand_assign == d$music_lessons, ]
pp_balance <- table('ses' = dd$ses, 'assignment' = dd$rand_assign)
prop.table(pp_balance, 2)
pp_control <- mean(dd$math[dd$rand_assign == 0])
pp_treat <- mean(dd$math[dd$rand_assign == 1])
pp_estimate <- pp_treat - pp_control
pp_lm <- lm(dd$math ~ dd$rand_assign)
summary(pp_lm)
# ------------------------------------------------------------------------------
# To be contined at REX004 ...
# Main results of simulation ---------------------------------------------------
ATE <- mean(d$u_delta) # True average treatment effect (if everyone complied)
iv_estimate <- itt_estimate / mean((1 - d$u_nevertaker))
effects <- c(ATE, itt_estimate, at_estimate, pp_estimate, iv_estimate)
names(effects) <- c('ATE', 'itt', 'at', 'pp', 'iv')
effects
# ------------------------------------------------------------------------------
# Script1. Randomized experiment (under construction)
#
# The simulated scenario is a simple randomized experiment on the effect of extra
# music lessons on math performance.
#
# Simulated variables:
#  1. Independent variable: At the start of grade 6, all children at a specific
#     school are randomly assigned to receive either extra music lessons (treatment)
#     or no extra music lessons (control).
#  2. Background (or pre-treatment) variable: Socioeconomic status, defined based
#     on residential area (either high-income or low-income area).
#  3. Outcome variable: Score on math test taken at the end of the semester.
#
# Mats Nilsson (mats.nilsson@psychology.su.se), revised: 2017-11-14
# To be started at REX001 ...
# Clear things and set random seed ---------------------------------------------
rm(list = ls())
graphics.off()
cat("\014")
set.seed(123)
# ------------------------------------------------------------------------------
# Set these parameters ---------------------------------------------------------
n <- 600 # Sample size
phi_ses <- 0.3  # Proportion high SES
pnt_hi <- 0.1  # Proportion nevertakers among high-SES children
pnt_lo <- 0.5  # Proportion nevertakers among low-SES children
causal_effect <- 2  # Mean causal effect
sd_causal_effect <- 1  # Standard deviation of causal effect
# ------------------------------------------------------------------------------
# Simulate data ----------------------------------------------------------------
id <- 1:n # Unique id number for each participant
# Define socio-economic status (SES)
ses <- sample(c(0, 1), prob = c(1 - phi_ses, phi_ses), size = n, replace = TRUE)
# Define complier (how does this work?). 1 = nevertaker, 0 = complier. We are
# assuming no always-takers and no defiers
nt_hi <-      ses  * sample(c(0, 1), size = n, replace = TRUE,
prob = c(1 - pnt_hi, pnt_hi))
nt_lo <- (1 - ses) * sample(c(0, 1), size = n, replace = TRUE,
prob = c(1 - pnt_lo, pnt_lo))
u_nevertaker <- nt_hi + nt_lo
# Potential outcomes
u_Y0 <- rnorm(n, m = 50, sd = 10) + 10 * ses
u_Y1 <- u_Y0 + rnorm(n, m = causal_effect, sd = sd_causal_effect)
#u_Y1[u_nevertaker == 1] <- u_Y0[u_nevertaker == 1]  # Never-takers have the same outcome under both
# Single unit causal effect (delta)
u_delta <- u_Y1 - u_Y0
# Random assignment
rand_assign <- sample(c(0, 1), replace = TRUE, size = n) # Bernoulli trial method
# Recieved treatment
music_lessons <- rand_assign * (1 - u_nevertaker)  # No music lessons for nevertakers
# Observed scores
math <- u_Y0  # Math scores untreated
math[music_lessons == 1] <- u_Y1[music_lessons == 1]  # Math score treated
# Make data set
d <- data.frame(id, u_Y0, u_Y1, u_delta, u_nevertaker, ses, rand_assign, music_lessons, math)
# ------------------------------------------------------------------------------
# To be contined at REX003 ...
# Intent to treat analysis (ITT) -----------------------------------------------
itt_balance <- table('ses' = d$ses, 'assignment' = d$rand_assign)
prop.table(itt_balance, 2)
assign_control <- mean(d$math[d$rand_assign == 0])
assign_treat <- mean(d$math[d$rand_assign == 1])
itt_estimate <- assign_treat - assign_control
itt_lm <- lm(d$math ~ d$rand_assign)
summary(itt_lm)
# ------------------------------------------------------------------------------
# As-treated analysis (AT) -----------------------------------------------------
at_balance <- table('ses' = d$ses, 'received' = d$music_lessons)
prop.table(at_balance, 2)
received_control <- mean(d$math[d$music_lessons == 0])
received_treat <- mean(d$math[d$music_lessons == 1])
at_estimate <- received_treat - received_control
at_lm <- lm(d$math ~ d$music_lessons)
summary(at_lm)
# ------------------------------------------------------------------------------
# Per protocol (pp) analysis ---------------------------------------------------
dd <- d[d$rand_assign == d$music_lessons, ]
pp_balance <- table('ses' = dd$ses, 'assignment' = dd$rand_assign)
prop.table(pp_balance, 2)
pp_control <- mean(dd$math[dd$rand_assign == 0])
pp_treat <- mean(dd$math[dd$rand_assign == 1])
pp_estimate <- pp_treat - pp_control
pp_lm <- lm(dd$math ~ dd$rand_assign)
summary(pp_lm)
# ------------------------------------------------------------------------------
# Script1. Randomized experiment (under construction)
#
# The simulated scenario is a simple randomized experiment on the effect of extra
# music lessons on math performance.
#
# Simulated variables:
#  1. Independent variable: At the start of grade 6, all children at a specific
#     school are randomly assigned to receive either extra music lessons (treatment)
#     or no extra music lessons (control).
#  2. Background (or pre-treatment) variable: Socioeconomic status, defined based
#     on residential area (either high-income or low-income area).
#  3. Outcome variable: Score on math test taken at the end of the semester.
#
# Mats Nilsson (mats.nilsson@psychology.su.se), revised: 2017-11-14
# To be started at REX001 ...
# Clear things and set random seed ---------------------------------------------
rm(list = ls())
graphics.off()
cat("\014")
set.seed(123)
# ------------------------------------------------------------------------------
# Set these parameters ---------------------------------------------------------
n <- 600000 # Sample size
phi_ses <- 0.3  # Proportion high SES
pnt_hi <- 0.0  # Proportion nevertakers among high-SES children
pnt_lo <- 0.0  # Proportion nevertakers among low-SES children
causal_effect <- 0  # Mean causal effect
sd_causal_effect <- 1  # Standard deviation of causal effect
# ------------------------------------------------------------------------------
# Simulate data ----------------------------------------------------------------
id <- 1:n # Unique id number for each participant
# Define socio-economic status (SES)
ses <- sample(c(0, 1), prob = c(1 - phi_ses, phi_ses), size = n, replace = TRUE)
# Define complier (how does this work?). 1 = nevertaker, 0 = complier. We are
# assuming no always-takers and no defiers
nt_hi <-      ses  * sample(c(0, 1), size = n, replace = TRUE,
prob = c(1 - pnt_hi, pnt_hi))
nt_lo <- (1 - ses) * sample(c(0, 1), size = n, replace = TRUE,
prob = c(1 - pnt_lo, pnt_lo))
u_nevertaker <- nt_hi + nt_lo
# Potential outcomes
u_Y0 <- rnorm(n, m = 50, sd = 10) + 10 * ses
u_Y1 <- u_Y0 + rnorm(n, m = causal_effect, sd = sd_causal_effect)
#u_Y1[u_nevertaker == 1] <- u_Y0[u_nevertaker == 1]  # Never-takers have the same outcome under both
# Single unit causal effect (delta)
u_delta <- u_Y1 - u_Y0
# Random assignment
rand_assign <- sample(c(0, 1), replace = TRUE, size = n) # Bernoulli trial method
# Recieved treatment
music_lessons <- rand_assign * (1 - u_nevertaker)  # No music lessons for nevertakers
# Observed scores
math <- u_Y0  # Math scores untreated
math[music_lessons == 1] <- u_Y1[music_lessons == 1]  # Math score treated
# Make data set
d <- data.frame(id, u_Y0, u_Y1, u_delta, u_nevertaker, ses, rand_assign, music_lessons, math)
# ------------------------------------------------------------------------------
# To be contined at REX003 ...
# Intention to treat analysis (ITT) --------------------------------------------
itt_balance <- table('ses' = d$ses, 'assignment' = d$rand_assign)
prop.table(itt_balance, 2)
assign_control <- mean(d$math[d$rand_assign == 0])
assign_treat <- mean(d$math[d$rand_assign == 1])
itt_estimate <- assign_treat - assign_control
itt_lm <- lm(d$math ~ d$rand_assign)
summary(itt_lm)
# ------------------------------------------------------------------------------
# As-treated analysis (AT) -----------------------------------------------------
at_balance <- table('ses' = d$ses, 'received' = d$music_lessons)
prop.table(at_balance, 2)
received_control <- mean(d$math[d$music_lessons == 0])
received_treat <- mean(d$math[d$music_lessons == 1])
at_estimate <- received_treat - received_control
at_lm <- lm(d$math ~ d$music_lessons)
summary(at_lm)
# ------------------------------------------------------------------------------
# Per protocol (pp) analysis ---------------------------------------------------
dd <- d[d$rand_assign == d$music_lessons, ]
pp_balance <- table('ses' = dd$ses, 'assignment' = dd$rand_assign)
prop.table(pp_balance, 2)
pp_control <- mean(dd$math[dd$rand_assign == 0])
pp_treat <- mean(dd$math[dd$rand_assign == 1])
pp_estimate <- pp_treat - pp_control
pp_lm <- lm(dd$math ~ dd$rand_assign)
summary(pp_lm)
# ------------------------------------------------------------------------------
# To be contined at REX004 ...
# Main results of simulation ---------------------------------------------------
ATE <- mean(d$u_delta) # True average treatment effect (if everyone complied)
iv_estimate <- itt_estimate / mean((1 - d$u_nevertaker))
effects <- c(ATE, itt_estimate, at_estimate, pp_estimate, iv_estimate)
names(effects) <- c('ATE', 'itt', 'at', 'pp', 'iv')
effects
# ------------------------------------------------------------------------------
# Script1. Randomized experiment (under construction)
#
# The simulated scenario is a simple randomized experiment on the effect of extra
# music lessons on math performance.
#
# Simulated variables:
#  1. Independent variable: At the start of grade 6, all children at a specific
#     school are randomly assigned to receive either extra music lessons (treatment)
#     or no extra music lessons (control).
#  2. Background (or pre-treatment) variable: Socioeconomic status, defined based
#     on residential area (either high-income or low-income area).
#  3. Outcome variable: Score on math test taken at the end of the semester.
#
# Mats Nilsson (mats.nilsson@psychology.su.se), revised: 2017-11-14
# To be started at REX001 ...
# Clear things and set random seed ---------------------------------------------
rm(list = ls())
graphics.off()
cat("\014")
set.seed(123)
# ------------------------------------------------------------------------------
# Set these parameters ---------------------------------------------------------
n <- 600000 # Sample size
phi_ses <- 0.3  # Proportion high SES
pnt_hi <- 0.0  # Proportion nevertakers among high-SES children
pnt_lo <- 0.0  # Proportion nevertakers among low-SES children
causal_effect <- 2 # Mean causal effect
sd_causal_effect <- 1  # Standard deviation of causal effect
# ------------------------------------------------------------------------------
# Simulate data ----------------------------------------------------------------
id <- 1:n # Unique id number for each participant
# Define socio-economic status (SES)
ses <- sample(c(0, 1), prob = c(1 - phi_ses, phi_ses), size = n, replace = TRUE)
# Define complier (how does this work?). 1 = nevertaker, 0 = complier. We are
# assuming no always-takers and no defiers
nt_hi <-      ses  * sample(c(0, 1), size = n, replace = TRUE,
prob = c(1 - pnt_hi, pnt_hi))
nt_lo <- (1 - ses) * sample(c(0, 1), size = n, replace = TRUE,
prob = c(1 - pnt_lo, pnt_lo))
u_nevertaker <- nt_hi + nt_lo
# Potential outcomes
u_Y0 <- rnorm(n, m = 50, sd = 10) + 10 * ses
u_Y1 <- u_Y0 + rnorm(n, m = causal_effect, sd = sd_causal_effect)
#u_Y1[u_nevertaker == 1] <- u_Y0[u_nevertaker == 1]  # Never-takers have the same outcome under both
# Single unit causal effect (delta)
u_delta <- u_Y1 - u_Y0
# Random assignment
rand_assign <- sample(c(0, 1), replace = TRUE, size = n) # Bernoulli trial method
# Recieved treatment
music_lessons <- rand_assign * (1 - u_nevertaker)  # No music lessons for nevertakers
# Observed scores
math <- u_Y0  # Math scores untreated
math[music_lessons == 1] <- u_Y1[music_lessons == 1]  # Math score treated
# Make data set
d <- data.frame(id, u_Y0, u_Y1, u_delta, u_nevertaker, ses, rand_assign, music_lessons, math)
# ------------------------------------------------------------------------------
# To be contined at REX003 ...
# Intention to treat analysis (ITT) --------------------------------------------
itt_balance <- table('ses' = d$ses, 'assignment' = d$rand_assign)
prop.table(itt_balance, 2)
assign_control <- mean(d$math[d$rand_assign == 0])
assign_treat <- mean(d$math[d$rand_assign == 1])
itt_estimate <- assign_treat - assign_control
itt_lm <- lm(d$math ~ d$rand_assign)
summary(itt_lm)
# ------------------------------------------------------------------------------
# As-treated analysis (AT) -----------------------------------------------------
at_balance <- table('ses' = d$ses, 'received' = d$music_lessons)
prop.table(at_balance, 2)
received_control <- mean(d$math[d$music_lessons == 0])
received_treat <- mean(d$math[d$music_lessons == 1])
at_estimate <- received_treat - received_control
at_lm <- lm(d$math ~ d$music_lessons)
summary(at_lm)
# ------------------------------------------------------------------------------
# Per protocol (pp) analysis ---------------------------------------------------
dd <- d[d$rand_assign == d$music_lessons, ]
pp_balance <- table('ses' = dd$ses, 'assignment' = dd$rand_assign)
prop.table(pp_balance, 2)
pp_control <- mean(dd$math[dd$rand_assign == 0])
pp_treat <- mean(dd$math[dd$rand_assign == 1])
pp_estimate <- pp_treat - pp_control
pp_lm <- lm(dd$math ~ dd$rand_assign)
summary(pp_lm)
# ------------------------------------------------------------------------------
# To be contined at REX004 ...
# Main results of simulation ---------------------------------------------------
ATE <- mean(d$u_delta) # True average treatment effect (if everyone complied)
iv_estimate <- itt_estimate / mean((1 - d$u_nevertaker))
effects <- c(ATE, itt_estimate, at_estimate, pp_estimate, iv_estimate)
names(effects) <- c('ATE', 'itt', 'at', 'pp', 'iv')
effects
# ------------------------------------------------------------------------------
n = 1e5
n = 1e5
vvg <- rnorm(n)
pa <- rnorm(n) + 0.5 * vvg
agg <- rnorm(n) + 0.5 * vvg + 0.5 * pa
bmi <- rnorm(n) + 0.5 * pa
lm(agg ~ vvg)
# Simulate full DAG ------------------------------------------------------------
support <- rnorm(n)
genetic <- rnorm(n)
sprob   <- rnorm(n) + 0.5 * support + 0.5 * genetic
vvg     <- rnorm(n) + 0.5 * support
pa      <- rnorm(n) + 0.5 * vvg
bmi     <- rnorm(n) + 0.5 * pa
agg     <- rnorm(n) + 0.5 * vvg + 0.5 * pa + 0.5 * sprob + 0.5 * genetic
# ------------------------------------------------------------------------------
# Do some regression modelling -------------------------------------------------
model1 <- lm(agg ~ vvg)  # confounding bias
model2 <- lm(agg ~ vvg + pa + support)  # over-adjustment bias
model3 <- lm(agg ~ vvg + bmi + support) # over-adjustment bias, but less so
model4 <- lm(agg ~ vvg + sprob)  # collider bias
model5 <- lm(agg ~ vvg + support) # unbiased
model6 <- lm(agg ~ vvg + support + sprob) # unbiased
# ------------------------------------------------------------------------------
crude <- model1$coefficients[2]
with_sprob <- model4$coefficients[2]
with_support <- model5$coefficients[2]
my_estimates <- c(crude, with_sprob, with_support)  # Combine in a vector
names(my_estimates) <- c('Crude', '+Sprob', '+Support')
my_estimates
# Plot of model estimates ------------------------------------------------------
plot(c(1, 2, 3), my_estimates, ylim = c(0.5, 1), xaxt = 'n', xlab = 'Model',
ylab = 'Causal effect estimate')
lines(c(1, 3), c(0.75, 0.75), lty = 2)
axis(1, at = 1:3, labels <- names(my_estimates))
getwd()
setwd("C:/Users/MATNI/Dropbox/mn2018/undervisning/method1/methods1_ht18/stamnosslin.github.io/rex001_files/")
getwd()
setwd("../")
getwd()
rmarkdown::clean_site()
rmarkdown::render_site()
rmarkdown::clean_site()
rmarkdown::render_site()
